

//--------------------------------------------------------------------------------------
// Globals
//--------------------------------------------------------------------------------------
//--------------------------------------------------------------------------------------
// Textures and Samplers
//--------------------------------------------------------------------------------------

// 光
// マテリアル
float4	m_LightDir : register(c0);
// スペキュラ光の計算用	

sampler2D g_Texture : register(s0);

//--------------------------------------------------------------------------------------
// Input / Output structures
//--------------------------------------------------------------------------------------
struct PS_INPUT
{
	float2 Texcoord	: TEXCOORD0;
	float3 Normal   : TEXCOORD1;
};

//--------------------------------------------------------------------------------------
// Pixel Shader
//--------------------------------------------------------------------------------------
float4 main(PS_INPUT Input) : SV_TARGET
{
	float4 out_Color;

	float P = dot(normalize(Input.Normal.xyz), -m_LightDir.xyz);
	P = P * 0.5f + 0.5f;
	P = P * P;

	out_Color = P * tex2D(g_Texture, Input.Texcoord);
	out_Color.w = 1.0f;
	return out_Color;
}
